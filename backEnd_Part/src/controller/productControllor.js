

// // // required models ---->

const productModel = require("../model/productModel")
const reviewModel = require("../model/reviewModel")



async function createNewProduct (req , res){

    console.log(req.body)

    // // // Check body (body can't be empty)

    if(Object.keys(req.body).length <= 0){
        return res.status(400).send({ status : false , message : "Body can't be empty" })
    }


    let nameOfProduct = req.body.name
     

    // // // Validation ---> 


    let newProduct = await productModel.create(req.body)

    console.log(newProduct)

    res.status(201).send({status : true , message : "Product created" , data : newProduct})
    

}



async function findAllProducts (req , res){

    const findAllProducts = await productModel.find().select('-_id -updatedAt -createdAt -__v -description -type').populate("review")

    res.status(200).send({status : true , totaldata : findAllProducts.length , data : findAllProducts })

}



async function findOneProduct( req , res ){

    const productId = req.params.productId     // // // Product id should given by frontEnd (generated by UUID)

    // console.log(productId) 

    if(!productId) return res.status(400).send({ status : false , message : "Product id should given in path params." })

    let product = await productModel.findOne({id : productId}).select('-updatedAt -createdAt -__v').lean()

    if(!product) return res.status(400).send({ status : false , message : "Product not found by this id." })
    

    // // // Here finding all reviews about this product
    let findAllReview = await reviewModel.find({ product : product._id } ).select('-id -updatedAt -createdAt -__v')

    // console.log(findAllReview , product._id)

    // // //.lean() is used means we can modify the object.
    product.review = findAllReview      // // // storing all revies inside review key of product object.
    delete product._id                  // // // Deleting _id of product because i don't want to show it on frontEnd.


    return res.status(200).send({status : true , message : "Product with details fetched" , data : product })

}





module.exports = {createNewProduct , findAllProducts , findOneProduct}

